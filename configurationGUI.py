#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Oct 30, 2017 08:44:38 AM
import sys

import sys
import Configurations
import dashboard

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import configuration_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    configuration_support.set_Tk_var()
    top = IPCS_Configurations (root)
    configuration_support.init(root, top)
    root.mainloop()

w = None
def create_IPCS_Configurations(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    configuration_support.set_Tk_var()
    top = IPCS_Configurations (w)
    configuration_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_IPCS_Configurations():
    global w
    w.destroy()
    w = None


class IPCS_Configurations:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {Segoe UI} -size 9 -weight bold -slant roman "  \
            "-underline 0 -overstrike 0"

        top.geometry("596x824+520+2")
        top.title("IPCS Configurations")
        top.configure(background="#ffffff")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        config = Configurations.Configuration()

        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.03, rely=0.02, relheight=0.15, relwidth=0.44)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#eeeeee")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        self.Frame1.configure(width=265)

        self.Label1 = Label(self.Frame1)
        self.Label1.place(relx=0.2, rely=0.08, height=21, width=180)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#eeeeee")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Crosswalk Measurement''')

        self.Label3 = Label(self.Frame1)
        self.Label3.place(relx=0.11, rely=0.4, height=21, width=90)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#eeeeee")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Length (ft)  -''')

        self.Label4 = Label(self.Frame1)
        self.Label4.place(relx=0.11, rely=0.64, height=21, width=90)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#eeeeee")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Width (ft)   -''')

        self.setLength = Label(self.Frame1)
        self.setLength.place(relx=0.51, rely=0.4, height=21, width=40)
        self.setLength.configure(activebackground="#f9f9f9")
        self.setLength.configure(activeforeground="black")
        self.setLength.configure(background="#eeeeee")
        self.setLength.configure(disabledforeground="#a3a3a3")
        self.setLength.configure(foreground="#000000")
        self.setLength.configure(highlightbackground="#d9d9d9")
        self.setLength.configure(highlightcolor="black")
        self.setLength.configure(text=config.getcLength())

        self.setWidth = Label(self.Frame1)
        self.setWidth.place(relx=0.5, rely=0.64, height=21, width=40)
        self.setWidth.configure(activebackground="#f9f9f9")
        self.setWidth.configure(activeforeground="black")
        self.setWidth.configure(background="#eeeeee")
        self.setWidth.configure(disabledforeground="#a3a3a3")
        self.setWidth.configure(foreground="#000000")
        self.setWidth.configure(highlightbackground="#d9d9d9")
        self.setWidth.configure(highlightcolor="black")
        self.setWidth.configure(text=config.getcWidth())

        self.Frame2 = Frame(top)
        self.Frame2.place(relx=0.52, rely=0.02, relheight=0.15, relwidth=0.44)
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(background="#eeeeee")
        self.Frame2.configure(highlightbackground="#d9d9d9")
        self.Frame2.configure(highlightcolor="black")
        self.Frame2.configure(width=265)

        self.Label2 = Label(self.Frame2)
        self.Label2.place(relx=0.2, rely=0.08, height=21, width=180)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#eeeeee")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font9)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Rush Time Periods''')

        self.Label5 = Label(self.Frame2)
        self.Label5.place(relx=0.16, rely=0.4, height=21, width=71)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#eeeeee")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Start Time  -''')

        self.Label6 = Label(self.Frame2)
        self.Label6.place(relx=0.16, rely=0.64, height=21, width=70)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#eeeeee")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''End Time   -''')

        self.rbnSlot1 = Radiobutton(self.Frame2)
        self.rbnSlot1.place(relx=0.11, rely=0.24, relheight=0.2, relwidth=0.24)
        self.rbnSlot1.configure(activebackground="#d9d9d9")
        self.rbnSlot1.configure(activeforeground="#000000")
        self.rbnSlot1.configure(background="#eeeeee")
        self.rbnSlot1.configure(disabledforeground="#a3a3a3")
        self.rbnSlot1.configure(foreground="#000000")
        self.rbnSlot1.configure(highlightbackground="#d9d9d9")
        self.rbnSlot1.configure(highlightcolor="black")
        self.rbnSlot1.configure(justify=LEFT)
        self.rbnSlot1.configure(text='''Slot 01''')

        self.rbnSlot2 = Radiobutton(self.Frame2)
        self.rbnSlot2.place(relx=0.6, rely=0.24, relheight=0.2, relwidth=0.24)
        self.rbnSlot2.configure(activebackground="#d9d9d9")
        self.rbnSlot2.configure(activeforeground="#000000")
        self.rbnSlot2.configure(background="#eeeeee")
        self.rbnSlot2.configure(disabledforeground="#a3a3a3")
        self.rbnSlot2.configure(foreground="#000000")
        self.rbnSlot2.configure(highlightbackground="#d9d9d9")
        self.rbnSlot2.configure(highlightcolor="black")
        self.rbnSlot2.configure(justify=LEFT)
        self.rbnSlot2.configure(text='''Slot 02''')

        self.setstartTime = Label(self.Frame2)
        self.setstartTime.place(relx=0.57, rely=0.4, height=21, width=35)
        self.setstartTime.configure(activebackground="#f9f9f9")
        self.setstartTime.configure(activeforeground="black")
        self.setstartTime.configure(background="#eeeeee")
        self.setstartTime.configure(disabledforeground="#a3a3a3")
        self.setstartTime.configure(foreground="#000000")
        self.setstartTime.configure(highlightbackground="#d9d9d9")
        self.setstartTime.configure(highlightcolor="black")
        self.setstartTime.configure(text=config.getFirstRushTimeSlot_StartTime())

        self.setendTime = Label(self.Frame2)
        self.setendTime.place(relx=0.57, rely=0.64, height=21, width=36)
        self.setendTime.configure(activebackground="#f9f9f9")
        self.setendTime.configure(activeforeground="black")
        self.setendTime.configure(background="#eeeeee")
        self.setendTime.configure(disabledforeground="#a3a3a3")
        self.setendTime.configure(foreground="#000000")
        self.setendTime.configure(highlightbackground="#d9d9d9")
        self.setendTime.configure(highlightcolor="black")
        self.setendTime.configure(text=config.getFirstRushTimeSlot_EndTime())

        self.Label11 = Label(top)
        self.Label11.place(relx=0.03, rely=0.19, height=21, width=180)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''Set New Cross walk Values''')

        self.Label12 = Label(top)
        self.Label12.place(relx=0.04, rely=0.23, height=21, width=110)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#ffffff")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''Crosswalk length''')

        self.Label13 = Label(top)
        self.Label13.place(relx=0.04, rely=0.27, height=21, width=110)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#ffffff")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''Crosswalk Width''')

        self.txtLength = Entry(top)
        self.txtLength.place(relx=0.23, rely=0.23, relheight=0.02, relwidth=0.28)

        self.txtLength.configure(background="white")
        self.txtLength.configure(disabledforeground="#a3a3a3")
        self.txtLength.configure(font="TkFixedFont")
        self.txtLength.configure(foreground="#000000")
        self.txtLength.configure(highlightbackground="#d9d9d9")
        self.txtLength.configure(highlightcolor="black")
        self.txtLength.configure(insertbackground="black")
        self.txtLength.configure(selectbackground="#c4c4c4")
        self.txtLength.configure(selectforeground="black")

        self.txtWidth = Entry(top)
        self.txtWidth.place(relx=0.23, rely=0.27, relheight=0.02, relwidth=0.28)
        self.txtWidth.configure(background="white")
        self.txtWidth.configure(disabledforeground="#a3a3a3")
        self.txtWidth.configure(font="TkFixedFont")
        self.txtWidth.configure(foreground="#000000")
        self.txtWidth.configure(highlightbackground="#d9d9d9")
        self.txtWidth.configure(highlightcolor="black")
        self.txtWidth.configure(insertbackground="black")
        self.txtWidth.configure(selectbackground="#c4c4c4")
        self.txtWidth.configure(selectforeground="black")

        def saveCrosswalkMessurments():
            try:
                length = float(self.txtLength.get())
                width = float(self.txtWidth.get())
                config.setLengthWidth(length, width)
            except ValueError:
                print "Please insert valid informations"
            else:
                print "Saved new cross walk measurements"

        
        self.btnCrosswalkMessurment = Button(top)
        self.btnCrosswalkMessurment.place(relx=0.57, rely=0.27, height=24
                , width=85)
        self.btnCrosswalkMessurment.configure(activebackground="#d9d9d9")
        self.btnCrosswalkMessurment.configure(activeforeground="#000000")
        self.btnCrosswalkMessurment.configure(background="#c8eaca")
        self.btnCrosswalkMessurment.configure(disabledforeground="#a3a3a3")
        self.btnCrosswalkMessurment.configure(foreground="#000000")
        self.btnCrosswalkMessurment.configure(highlightbackground="#d9d9d9")
        self.btnCrosswalkMessurment.configure(highlightcolor="black")
        self.btnCrosswalkMessurment.configure(pady="0")
        self.btnCrosswalkMessurment.configure(text='''Save''', command = saveCrosswalkMessurments)

        self.Label14 = Label(top)
        self.Label14.place(relx=0.03, rely=0.32, height=21, width=180)
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(activeforeground="black")
        self.Label14.configure(background="#d9d9d9")
        self.Label14.configure(disabledforeground="#a3a3a3")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(highlightbackground="#d9d9d9")
        self.Label14.configure(highlightcolor="black")
        self.Label14.configure(text='''Set New Rush Time Periods''')

        self.slot1 = Checkbutton(top)
        self.slot1.place(relx=0.23, rely=0.44, relheight=0.03, relwidth=0.11)
        self.slot1.configure(activebackground="#d9d9d9")
        self.slot1.configure(activeforeground="#000000")
        self.slot1.configure(background="#ffffff")
        self.slot1.configure(disabledforeground="#a3a3a3")
        self.slot1.configure(foreground="#000000")
        self.slot1.configure(highlightbackground="#d9d9d9")
        self.slot1.configure(highlightcolor="black")
        self.slot1.configure(justify=LEFT)
        self.slot1.configure(text='''Slot 01''')
        self.slot1.configure(variable=configuration_support.che71)

        self.Label15 = Label(top)
        self.Label15.place(relx=0.05, rely=0.36, height=21, width=65)
        self.Label15.configure(activebackground="#f9f9f9")
        self.Label15.configure(activeforeground="black")
        self.Label15.configure(background="#ffffff")
        self.Label15.configure(disabledforeground="#a3a3a3")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(highlightbackground="#d9d9d9")
        self.Label15.configure(highlightcolor="black")
        self.Label15.configure(text='''Start Time''')

        self.Label16 = Label(top)
        self.Label16.place(relx=0.05, rely=0.4, height=21, width=60)
        self.Label16.configure(activebackground="#f9f9f9")
        self.Label16.configure(activeforeground="black")
        self.Label16.configure(background="#ffffff")
        self.Label16.configure(disabledforeground="#a3a3a3")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(highlightbackground="#d9d9d9")
        self.Label16.configure(highlightcolor="black")
        self.Label16.configure(text='''End Time''')

        self.txtStartTIme = Entry(top)
        self.txtStartTIme.place(relx=0.23, rely=0.36, relheight=0.02
                , relwidth=0.28)
        self.txtStartTIme.configure(background="white")
        self.txtStartTIme.configure(cursor="fleur")
        self.txtStartTIme.configure(disabledforeground="#a3a3a3")
        self.txtStartTIme.configure(font="TkFixedFont")
        self.txtStartTIme.configure(foreground="#000000")
        self.txtStartTIme.configure(highlightbackground="#d9d9d9")
        self.txtStartTIme.configure(highlightcolor="black")
        self.txtStartTIme.configure(insertbackground="black")
        self.txtStartTIme.configure(selectbackground="#c4c4c4")
        self.txtStartTIme.configure(selectforeground="black")

        self.txtEndTime = Entry(top)
        self.txtEndTime.place(relx=0.23, rely=0.4, relheight=0.02, relwidth=0.28)

        self.txtEndTime.configure(background="white")
        self.txtEndTime.configure(disabledforeground="#a3a3a3")
        self.txtEndTime.configure(font="TkFixedFont")
        self.txtEndTime.configure(foreground="#000000")
        self.txtEndTime.configure(highlightbackground="#d9d9d9")
        self.txtEndTime.configure(highlightcolor="black")
        self.txtEndTime.configure(insertbackground="black")
        self.txtEndTime.configure(selectbackground="#c4c4c4")
        self.txtEndTime.configure(selectforeground="black")

        self.slo2 = Checkbutton(top)
        self.slo2.place(relx=0.39, rely=0.44, relheight=0.03, relwidth=0.11)
        self.slo2.configure(activebackground="#d9d9d9")
        self.slo2.configure(activeforeground="#000000")
        self.slo2.configure(background="#ffffff")
        self.slo2.configure(disabledforeground="#a3a3a3")
        self.slo2.configure(foreground="#000000")
        self.slo2.configure(highlightbackground="#d9d9d9")
        self.slo2.configure(highlightcolor="black")
        self.slo2.configure(justify=LEFT)
        self.slo2.configure(text='''Slot 02''')
        self.slo2.configure(variable=configuration_support.che76)


        def saveRushTimes():
            try:
                startTime = float(self.txtStartTIme.get())
                endTime = float(self.txtEndTime.get())
                config.setFirstRushTimeSlot(startTime, endTime)
            except ValueError:
                print "Please insert valid informations"
            else:
                print "Saved new rush time informations"
        

        self.btnRushTime = Button(top)
        self.btnRushTime.place(relx=0.57, rely=0.42, height=24, width=85)
        self.btnRushTime.configure(activebackground="#d9d9d9")
        self.btnRushTime.configure(activeforeground="#000000")
        self.btnRushTime.configure(background="#c8eaca")
        self.btnRushTime.configure(disabledforeground="#a3a3a3")
        self.btnRushTime.configure(foreground="#000000")
        self.btnRushTime.configure(highlightbackground="#d9d9d9")
        self.btnRushTime.configure(highlightcolor="black")
        self.btnRushTime.configure(pady="0")
        self.btnRushTime.configure(text='''Save''', command=saveRushTimes)

        self.Label17 = Label(top)
        self.Label17.place(relx=0.03, rely=0.49, height=21, width=180)
        self.Label17.configure(activebackground="#f9f9f9")
        self.Label17.configure(activeforeground="black")
        self.Label17.configure(background="#d9d9d9")
        self.Label17.configure(disabledforeground="#a3a3a3")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(highlightbackground="#d9d9d9")
        self.Label17.configure(highlightcolor="black")
        self.Label17.configure(text='''Image Cropping Parameters''')
        self.Label17.configure(width=165)

        self.Label18 = Label(top)
        self.Label18.place(relx=0.01, rely=0.53, height=21, width=60)
        self.Label18.configure(activebackground="#f9f9f9")
        self.Label18.configure(activeforeground="black")
        self.Label18.configure(background="#ffffff")
        self.Label18.configure(disabledforeground="#a3a3a3")
        self.Label18.configure(foreground="#000000")
        self.Label18.configure(highlightbackground="#d9d9d9")
        self.Label18.configure(highlightcolor="black")
        self.Label18.configure(text='''X''')
        self.Label18.configure(width=60)

        self.Label19 = Label(top)
        self.Label19.place(relx=0.01, rely=0.57, height=21, width=60)
        self.Label19.configure(activebackground="#f9f9f9")
        self.Label19.configure(activeforeground="black")
        self.Label19.configure(background="#ffffff")
        self.Label19.configure(disabledforeground="#a3a3a3")
        self.Label19.configure(foreground="#000000")
        self.Label19.configure(highlightbackground="#d9d9d9")
        self.Label19.configure(highlightcolor="black")
        self.Label19.configure(text='''Y''')
        self.Label19.configure(width=60)

        self.Label20 = Label(top)
        self.Label20.place(relx=0.03, rely=0.61, height=21, width=60)
        self.Label20.configure(activebackground="#f9f9f9")
        self.Label20.configure(activeforeground="black")
        self.Label20.configure(background="#ffffff")
        self.Label20.configure(disabledforeground="#a3a3a3")
        self.Label20.configure(foreground="#000000")
        self.Label20.configure(highlightbackground="#d9d9d9")
        self.Label20.configure(highlightcolor="black")
        self.Label20.configure(text='''Width''')

        self.Label21 = Label(top)
        self.Label21.place(relx=0.04, rely=0.64, height=21, width=60)
        self.Label21.configure(activebackground="#f9f9f9")
        self.Label21.configure(activeforeground="black")
        self.Label21.configure(background="#ffffff")
        self.Label21.configure(disabledforeground="#a3a3a3")
        self.Label21.configure(foreground="#000000")
        self.Label21.configure(highlightbackground="#d9d9d9")
        self.Label21.configure(highlightcolor="black")
        self.Label21.configure(text='''Height''')

        self.txtcropX = Entry(top)
        self.txtcropX.place(relx=0.23, rely=0.53, relheight=0.02, relwidth=0.28)
        self.txtcropX.configure(background="white")
        self.txtcropX.configure(cursor="fleur")
        self.txtcropX.configure(disabledforeground="#a3a3a3")
        self.txtcropX.configure(font="TkFixedFont")
        self.txtcropX.configure(foreground="#000000")
        self.txtcropX.configure(highlightbackground="#d9d9d9")
        self.txtcropX.configure(highlightcolor="black")
        self.txtcropX.configure(insertbackground="black")
        self.txtcropX.configure(selectbackground="#c4c4c4")
        self.txtcropX.configure(selectforeground="black")

        self.txtcropY = Entry(top)
        self.txtcropY.place(relx=0.23, rely=0.57, relheight=0.02, relwidth=0.28)
        self.txtcropY.configure(background="white")
        self.txtcropY.configure(disabledforeground="#a3a3a3")
        self.txtcropY.configure(font="TkFixedFont")
        self.txtcropY.configure(foreground="#000000")
        self.txtcropY.configure(highlightbackground="#d9d9d9")
        self.txtcropY.configure(highlightcolor="black")
        self.txtcropY.configure(insertbackground="black")
        self.txtcropY.configure(selectbackground="#c4c4c4")
        self.txtcropY.configure(selectforeground="black")

        self.txtcropWidth = Entry(top)
        self.txtcropWidth.place(relx=0.23, rely=0.61, relheight=0.02
                , relwidth=0.28)
        self.txtcropWidth.configure(background="white")
        self.txtcropWidth.configure(disabledforeground="#a3a3a3")
        self.txtcropWidth.configure(font="TkFixedFont")
        self.txtcropWidth.configure(foreground="#000000")
        self.txtcropWidth.configure(highlightbackground="#d9d9d9")
        self.txtcropWidth.configure(highlightcolor="black")
        self.txtcropWidth.configure(insertbackground="black")
        self.txtcropWidth.configure(selectbackground="#c4c4c4")
        self.txtcropWidth.configure(selectforeground="black")

        self.txtcropHeigth = Entry(top)
        self.txtcropHeigth.place(relx=0.23, rely=0.64, relheight=0.02
                , relwidth=0.28)
        self.txtcropHeigth.configure(background="white")
        self.txtcropHeigth.configure(disabledforeground="#a3a3a3")
        self.txtcropHeigth.configure(font="TkFixedFont")
        self.txtcropHeigth.configure(foreground="#000000")
        self.txtcropHeigth.configure(highlightbackground="#d9d9d9")
        self.txtcropHeigth.configure(highlightcolor="black")
        self.txtcropHeigth.configure(insertbackground="black")
        self.txtcropHeigth.configure(selectbackground="#c4c4c4")
        self.txtcropHeigth.configure(selectforeground="black")


        def btnImage():
            try:
                x = float(self.txtcropX.get())
                y = float(self.txtcropY.get())
                w = float(self.txtcropWidth.get())
                h = float(self.txtcropHeigth.get())
              
                config.setCropping(x,y,w,h)
            except ValueError:
                print "Please insert valid informations"
            else:
                print "Saved Image crop informations"
        

        self.btnImageCrop = Button(top)
        self.btnImageCrop.place(relx=0.57, rely=0.64, height=24, width=85)
        self.btnImageCrop.configure(activebackground="#d9d9d9")
        self.btnImageCrop.configure(activeforeground="#000000")
        self.btnImageCrop.configure(background="#c8eaca")
        self.btnImageCrop.configure(disabledforeground="#a3a3a3")
        self.btnImageCrop.configure(foreground="#000000")
        self.btnImageCrop.configure(highlightbackground="#d9d9d9")
        self.btnImageCrop.configure(highlightcolor="black")
        self.btnImageCrop.configure(pady="0")
        self.btnImageCrop.configure(text='''Save''', command = btnImage)

        self.Label22 = Label(top)
        self.Label22.place(relx=0.03, rely=0.69, height=21, width=105)
        self.Label22.configure(activebackground="#f9f9f9")
        self.Label22.configure(activeforeground="black")
        self.Label22.configure(background="#d9d9d9")
        self.Label22.configure(disabledforeground="#a3a3a3")
        self.Label22.configure(foreground="#000000")
        self.Label22.configure(highlightbackground="#d9d9d9")
        self.Label22.configure(highlightcolor="black")
        self.Label22.configure(text='''Red Light Time''')
        self.Label22.configure(width=105)

        self.Label23 = Label(top)
        self.Label23.place(relx=0.01, rely=0.73, height=21, width=110)
        self.Label23.configure(activebackground="#f9f9f9")
        self.Label23.configure(activeforeground="black")
        self.Label23.configure(background="#ffffff")
        self.Label23.configure(disabledforeground="#a3a3a3")
        self.Label23.configure(foreground="#000000")
        self.Label23.configure(highlightbackground="#d9d9d9")
        self.Label23.configure(highlightcolor="black")
        self.Label23.configure(text='''Time (Sec)''')
        self.Label23.configure(width=110)

        self.txtredLightTime = Entry(top)
        self.txtredLightTime.place(relx=0.23, rely=0.73, relheight=0.02
                , relwidth=0.28)
        self.txtredLightTime.configure(background="white")
        self.txtredLightTime.configure(disabledforeground="#a3a3a3")
        self.txtredLightTime.configure(font="TkFixedFont")
        self.txtredLightTime.configure(foreground="#000000")
        self.txtredLightTime.configure(highlightbackground="#d9d9d9")
        self.txtredLightTime.configure(highlightcolor="black")
        self.txtredLightTime.configure(insertbackground="black")
        self.txtredLightTime.configure(selectbackground="#c4c4c4")
        self.txtredLightTime.configure(selectforeground="black")

        def btnRedLight():
            try:
                RedlightTime = float(self.txtredLightTime.get())
              
                config.setRedLightTime(RedlightTime)
            except ValueError:
                print "Please insert valid informations"
            else:
                print "Saved new red light time informations"
        

        self.btnRedlight = Button(top)
        self.btnRedlight.place(relx=0.57, rely=0.73, height=24, width=85)
        self.btnRedlight.configure(activebackground="#d9d9d9")
        self.btnRedlight.configure(activeforeground="#000000")
        self.btnRedlight.configure(background="#c8eaca")
        self.btnRedlight.configure(disabledforeground="#a3a3a3")
        self.btnRedlight.configure(foreground="#000000")
        self.btnRedlight.configure(highlightbackground="#d9d9d9")
        self.btnRedlight.configure(highlightcolor="black")
        self.btnRedlight.configure(pady="0")
        self.btnRedlight.configure(text='''Save''', command = btnRedLight)


        self.Label33 = Label(top)
        self.Label33.place(relx=0.75, rely=0.73, height=21, width=60)
        self.Label33.configure(activebackground="#f9f9f9")
        self.Label33.configure(activeforeground="black")
        self.Label33.configure(background="#ffffff")
        self.Label33.configure(disabledforeground="#a3a3a3")
        self.Label33.configure(foreground="#000000")
        self.Label33.configure(highlightbackground="#d9d9d9")
        self.Label33.configure(highlightcolor="black")
        self.Label33.configure(text=config.getRedLightTime())
        self.Label33.configure(width=60)



        self.btnPreview = Button(top)
        self.btnPreview.place(relx=0.76, rely=0.64, height=24, width=85)
        self.btnPreview.configure(activebackground="#d9d9d9")
        self.btnPreview.configure(activeforeground="#000000")
        self.btnPreview.configure(background="#e2dfde")
        self.btnPreview.configure(disabledforeground="#a3a3a3")
        self.btnPreview.configure(foreground="#000000")
        self.btnPreview.configure(highlightbackground="#d9d9d9")
        self.btnPreview.configure(highlightcolor="black")
        self.btnPreview.configure(pady="0")
        self.btnPreview.configure(text='''Preview''')

        self.Label24 = Label(top)
        self.Label24.place(relx=0.03, rely=0.78, height=21, width=160)
        self.Label24.configure(activebackground="#f9f9f9")
        self.Label24.configure(activeforeground="black")
        self.Label24.configure(background="#d9d9d9")
        self.Label24.configure(disabledforeground="#a3a3a3")
        self.Label24.configure(foreground="#000000")
        self.Label24.configure(highlightbackground="#d9d9d9")
        self.Label24.configure(highlightcolor="black")
        self.Label24.configure(text='''People Walking Speed''')
        self.Label24.configure(width=135)

        self.txtwalkingSpeed = Entry(top)
        self.txtwalkingSpeed.place(relx=0.23, rely=0.83, relheight=0.02
                , relwidth=0.28)
        self.txtwalkingSpeed.configure(background="white")
        self.txtwalkingSpeed.configure(disabledforeground="#a3a3a3")
        self.txtwalkingSpeed.configure(font="TkFixedFont")
        self.txtwalkingSpeed.configure(foreground="#000000")
        self.txtwalkingSpeed.configure(highlightbackground="#d9d9d9")
        self.txtwalkingSpeed.configure(highlightcolor="black")
        self.txtwalkingSpeed.configure(insertbackground="black")
        self.txtwalkingSpeed.configure(selectbackground="#c4c4c4")
        self.txtwalkingSpeed.configure(selectforeground="black")

        self.Label25 = Label(top)
        self.Label25.place(relx=0.0, rely=0.83, height=21, width=110)
        self.Label25.configure(activebackground="#f9f9f9")
        self.Label25.configure(activeforeground="black")
        self.Label25.configure(background="#ffffff")
        self.Label25.configure(disabledforeground="#a3a3a3")
        self.Label25.configure(foreground="#000000")
        self.Label25.configure(highlightbackground="#d9d9d9")
        self.Label25.configure(highlightcolor="black")
        self.Label25.configure(text='''Speed (ft/s)''')


        def btnWalkingSpeed():
            try:
                Wspeed = float(self.txtwalkingSpeed.get())
              
                config.setPeopleWalkingSpeed(Wspeed)
            except ValueError:
                print "Please insert valid informations"
            else:
                print "Saved new red light time informations"
        

        self.btnWalkingSpeed = Button(top)
        self.btnWalkingSpeed.place(relx=0.57, rely=0.83, height=24, width=85)
        self.btnWalkingSpeed.configure(activebackground="#d9d9d9")
        self.btnWalkingSpeed.configure(activeforeground="#000000")
        self.btnWalkingSpeed.configure(background="#c8eaca")
        self.btnWalkingSpeed.configure(disabledforeground="#a3a3a3")
        self.btnWalkingSpeed.configure(foreground="#000000")
        self.btnWalkingSpeed.configure(highlightbackground="#d9d9d9")
        self.btnWalkingSpeed.configure(highlightcolor="black")
        self.btnWalkingSpeed.configure(pady="0")
        self.btnWalkingSpeed.configure(text='''Save''', command = btnWalkingSpeed)


        self.Label35 = Label(top)
        self.Label35.place(relx=0.75, rely=0.83, height=21, width=60)
        self.Label35.configure(activebackground="#f9f9f9")
        self.Label35.configure(activeforeground="black")
        self.Label35.configure(background="#ffffff")
        self.Label35.configure(disabledforeground="#a3a3a3")
        self.Label35.configure(foreground="#000000")
        self.Label35.configure(highlightbackground="#d9d9d9")
        self.Label35.configure(highlightcolor="black")
        self.Label35.configure(text=config.getPeopleWalkingSpeedgetRedLightTime())


        self.Label26 = Label(top)
        self.Label26.place(relx=0.03, rely=0.87, height=21, width=115)
        self.Label26.configure(activebackground="#f9f9f9")
        self.Label26.configure(activeforeground="black")
        self.Label26.configure(background="#d9d9d9")
        self.Label26.configure(disabledforeground="#a3a3a3")
        self.Label26.configure(foreground="#000000")
        self.Label26.configure(highlightbackground="#d9d9d9")
        self.Label26.configure(highlightcolor="black")
        self.Label26.configure(text='''Add Administrator''')
        self.Label26.configure(width=115)

        self.Label27 = Label(top)
        self.Label27.place(relx=0.0, rely=0.91, height=21, width=100)
        self.Label27.configure(activebackground="#f9f9f9")
        self.Label27.configure(activeforeground="black")
        self.Label27.configure(background="#ffffff")
        self.Label27.configure(disabledforeground="#a3a3a3")
        self.Label27.configure(foreground="#000000")
        self.Label27.configure(highlightbackground="#d9d9d9")
        self.Label27.configure(highlightcolor="black")
        self.Label27.configure(text='''Username''')
        self.Label27.configure(width=100)

        self.Label28 = Label(top)
        self.Label28.place(relx=0.0, rely=0.95, height=21, width=100)
        self.Label28.configure(activebackground="#f9f9f9")
        self.Label28.configure(activeforeground="black")
        self.Label28.configure(background="#ffffff")
        self.Label28.configure(disabledforeground="#a3a3a3")
        self.Label28.configure(foreground="#000000")
        self.Label28.configure(highlightbackground="#d9d9d9")
        self.Label28.configure(highlightcolor="black")
        self.Label28.configure(text='''Password''')
        self.Label28.configure(width=100)

        self.txtUsername = Entry(top)
        self.txtUsername.place(relx=0.23, rely=0.91, relheight=0.02
                , relwidth=0.28)
        self.txtUsername.configure(background="white")
        self.txtUsername.configure(disabledforeground="#a3a3a3")
        self.txtUsername.configure(font="TkFixedFont")
        self.txtUsername.configure(foreground="#000000")
        self.txtUsername.configure(highlightbackground="#d9d9d9")
        self.txtUsername.configure(highlightcolor="black")
        self.txtUsername.configure(insertbackground="black")
        self.txtUsername.configure(selectbackground="#c4c4c4")
        self.txtUsername.configure(selectforeground="black")

        self.txtPassword = Entry(top)
        self.txtPassword.place(relx=0.23, rely=0.95, relheight=0.02
                , relwidth=0.28)
        self.txtPassword.configure(background="white")
        self.txtPassword.configure(disabledforeground="#a3a3a3")
        self.txtPassword.configure(font="TkFixedFont")
        self.txtPassword.configure(foreground="#000000")
        self.txtPassword.configure(highlightbackground="#d9d9d9")
        self.txtPassword.configure(highlightcolor="black")
        self.txtPassword.configure(insertbackground="black")
        self.txtPassword.configure(selectbackground="#c4c4c4")
        self.txtPassword.configure(selectforeground="black")


        def btnRegiter():
            
                Username = self.txtUsername.get()
                Password = self.txtPassword.get()
                config.setLogindetails(Username, Password)
            
                print "Successfully Registered"
    

        self.btnRegister = Button(top)
        self.btnRegister.place(relx=0.57, rely=0.95, height=24, width=85)
        self.btnRegister.configure(activebackground="#d9d9d9")
        self.btnRegister.configure(activeforeground="#000000")
        self.btnRegister.configure(background="#c8eaca")
        self.btnRegister.configure(disabledforeground="#a3a3a3")
        self.btnRegister.configure(foreground="#000000")
        self.btnRegister.configure(highlightbackground="#d9d9d9")
        self.btnRegister.configure(highlightcolor="black")
        self.btnRegister.configure(pady="0")
        self.btnRegister.configure(text='''Save''', command = btnRegiter)


        def btnBack():
            root.destroy()
            dashboard.vp_start_gui()

        self.btnBack = Button(top)
        self.btnBack.place(relx=0.84, rely=0.96, height=24, width=85)
        self.btnBack.configure(activebackground="#d9d9d9")
        self.btnBack.configure(activeforeground="#000000")
        self.btnBack.configure(background="#eccdc6")
        self.btnBack.configure(disabledforeground="#a3a3a3")
        self.btnBack.configure(foreground="#000000")
        self.btnBack.configure(highlightbackground="#d9d9d9")
        self.btnBack.configure(highlightcolor="black")
        self.btnBack.configure(pady="0")
        self.btnBack.configure(text='''Back''', command=btnBack)






if __name__ == '__main__':
    vp_start_gui()



